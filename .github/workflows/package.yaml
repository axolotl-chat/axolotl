name: Axolotl package pipeline

on:
  workflow_call:

jobs:
  package-appimage:
    name: Package as AppImage
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Setup appimagetool
        run: |
          curl -sLO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Build AppImage (x86_64)
        env:
          ARCH: x86_64
        run: |
          mkdir -p build/AppDir/usr/bin
          cp -f build-artifacts/axolotl/axolotl build/AppDir/usr/bin/axolotl
          chmod +x build/AppDir/usr/bin/axolotl

          mkdir -p build/AppDir/usr/bin/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* build/AppDir/usr/bin/axolotl-web/dist

          cp -f appimage/AppDir/AppRun build/AppDir/AppRun
          chmod +x build/AppDir/AppRun

          cp -f appimage/AppDir/axolotl.desktop build/AppDir/axolotl.desktop
          cp -f appimage/AppDir/axolotl.png build/AppDir/axolotl.png

          mkdir -p build/AppDir/usr/share/metainfo
          cp -f appimage/AppDir/axolotl.appdata.xml build/AppDir/usr/share/metainfo/axolotl.appdata.xml

          ./appimagetool-x86_64.AppImage build/AppDir

      - name: Upload the built AppImage artifact
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-AppImage
          path: Axolotl-x86_64.AppImage
          retention-days: 5

  package-click-armhf:
    name: Package as click armhf
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Put axolotl web in place
        run: |
          mkdir $GITHUB_WORKSPACE/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* $GITHUB_WORKSPACE/axolotl-web/dist

      - name: Download built zkgroup library (armhf)
        run: |
          wget --quiet https://github.com/nanu-c/zkgroup/releases/download/v0.8.8/libzkgroup_linux_armv7_v0.8.8.so
          mkdir $GITHUB_WORKSPACE/lib/
          mv libzkgroup_linux_armv7_v0.8.8.so $GITHUB_WORKSPACE/lib/libzkgroup_linux_armv7.so

      - name: Build crayfish (armhf)
        uses: docker://clickable/ci-16.04-armhf:7.4.0
        with:
          args: clickable build -a armhf --verbose --libs crayfish

      - name: Build click (armhf)
        uses: docker://clickable/ci-16.04-armhf:7.4.0
        env:
          GOPATH: $GITHUB_WORKSPACE/go
        with:
          args: clickable build --verbose -a armhf --app

      - name: Upload the built click artifact (armhf)
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Clickable
          path: build/arm-linux-gnueabihf/app/textsecure.nanuc_*.click
          retention-days: 1

  package-click-arm64:
    name: Package as click arm64
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Put axolotl web in place
        run: |
          mkdir $GITHUB_WORKSPACE/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* $GITHUB_WORKSPACE/axolotl-web/dist

      - name: Download built zkgroup library (amd64)
        run: |
          wget --quiet https://github.com/nanu-c/zkgroup/releases/download/v0.8.8/libzkgroup_linux_aarch64_v0.8.8.so
          mkdir $GITHUB_WORKSPACE/lib/
          mv libzkgroup_linux_aarch64_v0.8.8.so $GITHUB_WORKSPACE/lib/libzkgroup_linux_aarch64.so

      - name: Build crayfish (arm64)
        uses: docker://clickable/ci-16.04-arm64:7.4.0
        with:
          args: clickable build -a arm64 --verbose --libs crayfish

      - name: Build click (arm64)
        uses: docker://clickable/ci-16.04-arm64:7.4.0
        env:
          GOPATH: $GITHUB_WORKSPACE/go
        with:
          args: clickable build --verbose -a arm64 --app

      - name: Upload the built click artifact (amd64)
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Clickable
          path: build/aarch64-linux-gnu/app/textsecure.nanuc_*.click
          retention-days: 1

  package-click-amd64:
    name: Package as click amd64
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Put axolotl web in place
        run: |
          mkdir $GITHUB_WORKSPACE/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* $GITHUB_WORKSPACE/axolotl-web/dist

      - name: Download built zkgroup library (amd64)
        run: |
          wget --quiet https://github.com/nanu-c/zkgroup/releases/download/v0.8.8/libzkgroup_linux_x86_64-v0.8.8.so
          mkdir $GITHUB_WORKSPACE/lib/
          mv libzkgroup_linux_x86_64-v0.8.8.so $GITHUB_WORKSPACE/lib/libzkgroup_linux_x86_64.so

      - name: Build crayfish (amd64)
        uses: docker://clickable/ci-16.04-amd64:7.4.0
        with:
          args: clickable build -a amd64 --verbose --libs crayfish

      - name: Build click (amd64)
        uses: docker://clickable/ci-16.04-amd64:7.4.0
        env:
          GOPATH: $GITHUB_WORKSPACE/go
        with:
          args: clickable build --verbose -a amd64 --app

      - name: Upload the built click artifact (amd64)
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Clickable
          path: build/x86_64-linux-gnu/app/textsecure.nanuc_*.click
          retention-days: 1

  package-flatpak-web:
    name: Package as Flatpak web bundle
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-21.08
      options: --privileged

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Install build dependencies
        run: dnf -y install protobuf

      - name: Build Flatpak Web version
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
        with:
          bundle: axolotl-web.flatpak
          manifest-path: flatpak/web/org.nanuc.Axolotl.yml
          cache-key: flatpak-builder-web-${{ github.sha }}

  package-flatpak-qt:
    name: Package as Flatpak QT bundle
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:kde-5.15-21.08
      options: --privileged

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Install build dependencies
        run: dnf -y install protobuf

      - name: Build Flatpak QT version
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
        with:
          bundle: axolotl-qt.flatpak
          manifest-path: flatpak/qt/org.nanuc.Axolotl.yml
          cache-key: flatpak-builder-qt-${{ github.sha }}

  package-deb-arm64:
    name: Package as Debian arm64
    runs-on: ubuntu-latest

    steps:
      - name: Set up arm64 packaging environment
        run: |
          sudo apt update
          sudo dpkg --add-architecture arm64
          sudo apt install -y debmake debhelper gcc-aarch64-linux-gnu

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download axolotl, axolotl-web and crayfish build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Get git tag version
        run: |
          git fetch --all --tags
          echo "TAG=$(git tag | tail --lines=1)" >> $GITHUB_ENV

      - name: Set package version
        run: |
          echo "RELEASE_VERSION=$(echo ${{ env.TAG }} | sed 's/v//')" >> $GITHUB_ENV

      - name: Prebuild package Debian arm64
        run: |
          wget https://github.com/nanu-c/axolotl/archive/v${{ env.RELEASE_VERSION }}.tar.gz --output-document=$GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}.tar.gz
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/axolotl
          cp --recursive $GITHUB_WORKSPACE/build-artifacts/linux-arm64/* $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/axolotl/
          cp $GITHUB_WORKSPACE/deb/LICENSE $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/LICENSE
          cd $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }} && debmake --yes --email arno_nuehm@riseup.net --fullname "Arno Nuehm" --monoarch
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/share/icons/hicolor/128x128/apps
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/share/applications
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/bin
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/etc/profile.d
          cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/README.Debian
          cp $GITHUB_WORKSPACE/deb/axolotl.png $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/share/icons/hicolor/128x128/apps/axolotl.png
          cp $GITHUB_WORKSPACE/deb/axolotl.desktop $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/share/applications/
          cp $GITHUB_WORKSPACE/deb/axolotl.sh $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/etc/profile.d/
          cp $GITHUB_WORKSPACE/deb/axolotl.install $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/
          cp $GITHUB_WORKSPACE/deb/postinst $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/
          cp $GITHUB_WORKSPACE/deb/control $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/control
          cp $GITHUB_WORKSPACE/deb/rules $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/rules
          wget https://github.com/nanu-c/zkgroup/raw/main/lib/libzkgroup_linux_aarch64.so --directory-prefix=$GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/lib/
          mv $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/axolotl/axolotl $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/bin/
          cp $GITHUB_WORKSPACE/build-artifacts/crayfish-arm64/crayfish $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/usr/bin/

      - name: Build package Debian arm64
        run: |
          rm $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/compat
          sudo ln -s /usr/lib/x86_64-linux-gnu/libfakeroot/libfakeroot-sysv.so /usr/aarch64-linux-gnu/lib/
          sed -i '4d' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          sed -e '/Initial/ {' -e 'r $GITHUB_WORKSPACE/docs/CHANGELOG.md' -e 'd' -e '}' -i $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          sed -i '3,4d' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          sed -i 's/*/  */g' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          sed -i 's/<preferred name and address to reach the upstream project>/aaron@nanu-c.org/' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/copyright
          sed -i 's/<url:\/\/example.com>/https:\/\/github.com\/nanu-c\/axolotl/' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/copyright
          cd $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }} && debuild -i -us -uc -b -aarm64

      - name: Upload the built Debian package artifact (arm64)
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Debian-arm64
          path: axolotl_*_arm64.deb
          retention-days: 1
