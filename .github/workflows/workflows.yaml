name: Axolotl pipeline

on:
  push:
    branches:
      - main
    tags:
      - v
  pull_request:

jobs:
  build-axolotl:
    name: Build axolotl
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Check out code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -race ./...

      - name: Build
        run: go build -v

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: axolotl
          path: axolotl
          retention-days: 1

  build-axolotl-web:
    name: Build axolotl-web
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Check out code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: npm --prefix ./axolotl-web ci --loglevel verbose

      - name: Run tests
        run: npm --prefix ./axolotl-web test

      - name: Lint application
        run: npm --prefix ./axolotl-web run lint

      - name: Analyze npm dependencies
        run: npm --prefix ./axolotl-web run depcheck

      - name: Build
        run: npm --prefix ./axolotl-web run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: axolotl-web
          path: axolotl-web/dist/
          retention-days: 1

  package-appimage:
    name: Package as AppImage
    # This ensures that this job only runs on git tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-axolotl, build-axolotl-web]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v2
        with:
          path: build-artifacts

      - name: Setup appimagetool
        run: |
          curl -sLO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Build AppImage (x86_64)
        env:
          ARCH: x86_64
        run: |
          mkdir -p build/AppDir/usr/bin
          cp -f build-artifacts/axolotl/axolotl build/AppDir/usr/bin/axolotl
          chmod +x build/AppDir/usr/bin/axolotl

          mkdir -p build/AppDir/usr/bin/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* build/AppDir/usr/bin/axolotl-web/dist

          cp -f appimage/AppDir/AppRun build/AppDir/AppRun
          chmod +x build/AppDir/AppRun

          cp -f appimage/AppDir/axolotl.desktop build/AppDir/axolotl.desktop
          cp -f appimage/AppDir/axolotl.png build/AppDir/axolotl.png

          mkdir -p build/AppDir/usr/share/metainfo
          cp -f appimage/AppDir/axolotl.appdata.xml build/AppDir/usr/share/metainfo/axolotl.appdata.xml

          ./appimagetool-x86_64.AppImage build/AppDir

      - name: Upload the built AppImage artifact
        uses: actions/upload-artifact@v2
        with:
          name: Axolotl-AppImage
          path: Axolotl-x86_64.AppImage
          retention-days: 1

  package-clickable-armhf:
    name: Package as clickable armhf
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Download npm dependencies
        run: npm --prefix ./axolotl-web ci --loglevel verbose

      - name: Download built zkgroup library (armhf)
        run: |
          wget --quiet https://github.com/nanu-c/zkgroup/releases/download/v0.8.8/libzkgroup_linux_armv7_v0.8.8.so
          mkdir $GITHUB_WORKSPACE/lib/
          mv libzkgroup_linux_armv7_v0.8.8.so $GITHUB_WORKSPACE/lib/libzkgroup_linux_armv7.so

      - name: Build clickable (armhf)
        uses: docker://clickable/ci-dev-16.04-armhf:16.04.5
        env:
          GOPATH: $GITHUB_WORKSPACE/go
        with:
          args: clickable build --verbose --libs crayfish --app

      - name: Upload the built clickable artifact (armhf)
        uses: actions/upload-artifact@v2
        with:
          name: Axolotl-Clickable
          path: build/arm-linux-gnueabihf/app/textsecure.nanuc_*.click
          retention-days: 1

  package-clickable-arm64:
    name: Package as clickable arm64
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Download npm dependencies
        run: npm --prefix ./axolotl-web ci --loglevel verbose

      - name: Download built zkgroup library (amd64)
        run: |
            wget --quiet https://github.com/nanu-c/zkgroup/releases/download/v0.8.8/libzkgroup_linux_aarch64_v0.8.8.so
            mkdir $GITHUB_WORKSPACE/lib/
            mv libzkgroup_linux_aarch64_v0.8.8.so $GITHUB_WORKSPACE/lib/libzkgroup_linux_aarch64.so

      - name: Build clickable (arm64)
        uses: docker://clickable/ci-dev-16.04-arm64:16.04.5
        env:
          GOPATH: $GITHUB_WORKSPACE/go
        with:
          args: clickable build --verbose --libs crayfish --app

      - name: Upload the built clickable artifact (amd64)
        uses: actions/upload-artifact@v2
        with:
          name: Axolotl-Clickable
          path: build/aarch64-linux-gnu/app/textsecure.nanuc_*.click
          retention-days: 1

  package-flatpak:
    name: Package as Flatpak bundle
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-20.08
      options: --privileged

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: bilelmoussaoui/flatpak-github-actions@v2
        with:
          bundle: "axolotl.flatpak"
          manifest-path: "flatpak/web/org.nanuc.Axolotl.yml"
          branch: "main"

  release:
    name: Create release
    # This ensures that this job only runs on git tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - package-appimage
      - package-clickable-armhf
      - package-clickable-arm64
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get git tag version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Set git tag version
        run: |
          echo "VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: build-artifacts

      - name: Get clickable version
        id: get_clickable_version
        run: |
          echo "::set-output name=version::$(ls ./build-artifacts/Axolotl-Clickable/*amd64.click | cut --delimiter="_" --fields=2)"

      - name: Set clickable version
        run: |
          echo "CLICKABLE_VERSION=${{ steps.get_clickable_version.outputs.version }}" >> $GITHUB_ENV

      - name: Create draft GitHub release page
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: |
            -
            -
          draft: true
          prerelease: false

      - name: Add AppImage to release (x86_64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/Axolotl-AppImage/Axolotl-x86_64.AppImage
          asset_name: Axolotl-${{ env.VERSION }}-x86_64.AppImage
          asset_content_type: application/vnd.appimage

      - name: Add clickable to release (amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/Axolotl-Clickable/textsecure.nanuc_${{ env.CLICKABLE_VERSION }}_amd64.click
          asset_name: textsecure.nanuc_${{ env.VERSION }}_amd64.click
          asset_content_type: application/vnd.debian.binary-package

      - name: Add clickable to release (armhf)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/Axolotl-Clickable/textsecure.nanuc_${{ env.CLICKABLE_VERSION }}_armhf.click
          asset_name: textsecure.nanuc_${{ env.VERSION }}_armhf.click
          asset_content_type: application/vnd.debian.binary-package
